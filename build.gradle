buildscript {
    ext.kotlin_version = '1.2.0-rc-39'
    repositories {
        mavenLocal()
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'http://dl.bintray.com/kotlin/kotlin-dev' }
        jcenter()
        mavenCentral()
    }


    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin_gradle"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$version_spring_boot")
    }
}
apply plugin: 'kotlin2js'

task wrapper(type: Wrapper) { gradleVersion = '4.1' }

allprojects {
    group = 'ee'
    version = 'dev-SNAPSHOT'
}

subprojects {
    apply plugin: "java"
    apply plugin: "kotlin"
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'idea'
    apply plugin: 'eclipse'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

    compileKotlin {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        kotlinOptions {
            jvmTarget = "1.8"
            apiVersion = "1.1"
            languageVersion = "1.1"
        }
    }

    sourceSets {
        main {
            kotlin.srcDirs = ['src/main/kotlin', 'src-gen/main/kotlin']
        }
    }

    repositories {
        mavenLocal()
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'http://dl.bintray.com/kotlin/kotlin-dev' }
        jcenter()
        mavenCentral()
    }

    dependencies {
        compile "org.slf4j:slf4j-api:$version_slf4j"
        compile "org.jetbrains.kotlin:kotlin-stdlib:$version_kotlin"
        testCompile "junit:junit:$version_junit"

        runtime "ch.qos.logback:logback-classic:$version_logback"
    }
}

project(':ee:ee-common_java') {
}

project(':ee:ee-common') {
    dependencies {
        compile project(':ee:ee-common_java')
    }
}

project(':ee:ee-asm') {
    dependencies {
        compile project(':ee:ee-common')
        compile "org.ow2.asm:asm:${version_asm}"
    }
}

project(':ee:ee-axon_example') {
    apply plugin: 'org.springframework.boot'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-data-jpa')
        compile('org.springframework.boot:spring-boot-starter-jersey')
        compile('org.springframework.boot:spring-boot-starter-web')
        runtime('org.hsqldb:hsqldb')
        compileOnly('org.projectlombok:lombok')
        testCompile('org.springframework.boot:spring-boot-starter-test')
        compile("org.axonframework:axon-spring:${version_axon}")
        testCompile("org.axonframework:axon-test:${version_axon}")
    }
}

project(':ee:ee-lang_item') {
    dependencies {
        compile project(':ee:ee-common')
        compile "com.fasterxml.jackson.module:jackson-module-kotlin:$version_jackson"
    }
}

project(':ee:ee-design') {
    dependencies {
        compile project(':ee:ee-lang')
    }
}

project(':ee:ee-design_gen') {
    dependencies {
        compile project(':ee:ee-lang')
    }
}

project(':ee:ee-design_ui') {
    dependencies {
        compile project(':ee:ee-design')
    }
}

project(':ee:ee-design_ui_des') {
    dependencies {
        compile project(':ee:ee-design')
        compile project(':ee:ee-asm')
    }
}

project(':ee:ee-design_ui_des_asm') {
    dependencies {
        compile project(':ee:ee-design')
        compile project(':ee:ee-asm')
    }
}

project(':ee:ee-lang') {
    dependencies {
        compile project(':ee:ee-lang_item')
    }
}

project(':ee:ee-lang_gen') {
    dependencies {
        compile project(':ee:ee-lang_item')
    }
}

project(':ee:ee-task') {
    dependencies {
        compile project(':ee:ee-lang')
    }
}

project(':ee:ee-task_des') {
    dependencies {
        compile project(':ee:ee-design')
    }
}

project(':ee:ee-system_des') {
    dependencies {
        compile project(':ee:ee-task_des')
    }
}

project(':ee:ee-system') {
    dependencies {
        compile project(':ee:ee-task')
    }
}

project(':ee:ee-design_task') {
    dependencies {
        compile project(':ee:ee-design')
        compile project(':ee:ee-system')
    }
}

project(':ee:ee-lang_fx') {
    apply plugin: 'application'
    mainClassName = 'ee.lang.fx.ModelApp'

    dependencies {
        compile project(':ee:ee-design_task')
        compile "no.tornado:tornadofx:$version_tornadofx"
    }

    jar {
        manifest {
            attributes(
                    'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                    'Main-Class': 'ee.lang.fx.ModelApp'
            )
        }
        from configurations.compile.collect { entry -> zipTree(entry) }
    }
}

project(':ee-slides:ee-slides_des'){
    dependencies {
        compile project(':ee:ee-design')
    }
}

project(':ee-slides:ee-slides'){
    dependencies {
        compile project(':ee:ee-common')
    }
}

project(':ee-slides:ee-slides_json'){
    dependencies {
        compile project(':ee-slides:ee-slides')
        compile "com.fasterxml.jackson.module:jackson-module-kotlin:$version_jackson"
    }
}

project(':ee-slides:ee-slides_fx') {
    apply plugin: 'application'
    mainClassName = 'ee.slides.fx.SlidesApp'

    dependencies {
        compile project(':ee-slides:ee-slides_json')
        compile "no.tornado:tornadofx:$version_tornadofx"
        compile "com.fasterxml.jackson.module:jackson-module-kotlin:$version_jackson"
    }

    jar {
        manifest {
            attributes(
                    'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                    'Main-Class': 'ee.slides.fx.SlidesApp'
            )
        }
        from configurations.compile.collect { entry -> zipTree(entry) }
    }
}

project(':ee-timeline:ee-timeline_des'){
    dependencies {
        compile project(':ee:ee-design')
    }
}

project(':ee-timeline:ee-timeline'){
    dependencies {
        compile project(':ee:ee-common')
    }
}

project(':ee-timeline:ee-timeline_json'){
    dependencies {
        compile project(':ee-timeline:ee-timeline')
        compile "com.fasterxml.jackson.module:jackson-module-kotlin:$version_jackson"
    }
}

project(':ee-timeline:ee-timeline_excel') {
    dependencies {
        compile project(':ee-timeline:ee-timeline')
        compile project(':ee-timeline:ee-timeline_json')
        compile project(':ee-office:ee-excel')
    }
}

project(':ee-elastic:ee-elastic') {
    apply plugin: 'application'
    apply plugin: 'kotlin'

    mainClassName = "ee.es.ExportMainKt"

    dependencies {
        compile project(':ee:ee-common')
        compile "org.elasticsearch.client:transport:$version_elasticsearch"
        compile "com.fasterxml.jackson.module:jackson-module-kotlin:$version_jackson"
        compile "mbuhot:eskotlin:$version_eskotlin"
        runtime "org.apache.logging.log4j:log4j-core:$version_log4j"
    }
}

project(':ee-office:ee-excel'){
    dependencies {
        compile project(':ee:ee-common')
        compile project(':ee:ee-design')

        compile "org.apache.poi:poi-ooxml:$version_ooxml"
    }
}

project(':ee-office:ee-msaccess'){
    dependencies {
        compile project(':ee:ee-common')
        compile "com.healthmarketscience.jackcess:jackcess:$version_jackcess"

        testCompile project(':ee:ee-design')
    }
}

project(':ee-office:ee-powerpoint'){
    dependencies {
        compile project(':ee:ee-common')
        compile project(':ee:ee-design')
        compile project(':ee-slides:ee-slides_json')

        compile "org.apache.poi:poi-ooxml:$version_ooxml"
    }
}

project(':ee-office:ee-word'){
    dependencies {
        compile project(':ee:ee-common')
        compile project(':ee:ee-design')

        compile "org.apache.poi:poi-ooxml:$version_ooxml"
        compile "org.apache.poi:poi-scratchpad:$version_poi_scratchpad"
    }
}

project(':ee-email:ee-email'){
    dependencies {
        compile project(':ee:ee-common')
        compile "javax.mail:javax.mail-api:$version_mail"
    }
}

project(':ee-email:ee-email_des'){
    dependencies {
        compile project(':ee:ee-design')
    }
}

project(':ee-email:ee-email_excel'){
    dependencies {
        compile project(':ee-email:ee-email')
        compile project(':ee-office:ee-excel')
    }
}

project(':ee-office:ee-word'){
    dependencies {
        compile project(':ee:ee-common')
        compile project(':ee:ee-design')

        compile "org.apache.poi:poi-ooxml:$version_ooxml"
    }
}

project(':ee-grab:ee-grab') {
    dependencies {
        compile project(':ee:ee-common')
        compile "org.seleniumhq.selenium:selenium-api:$version_selenium"
        compile "org.seleniumhq.selenium:selenium-firefox-driver:$version_selenium"
        compile "org.seleniumhq.selenium:selenium-chrome-driver:$version_selenium"
        compile "org.seleniumhq.selenium:selenium-support:$version_selenium"
        compile "org.apache.httpcomponents:httpclient:$version_httpclient"
    }

}
project(':ee-grab:ee-fiveh'){
    dependencies {
        compile project(':ee-grab:ee-grab')
        compile project(':ee-email:ee-email')
    }
}
project(':ee-grab:ee-rulit'){
    dependencies {
        compile project(':ee-grab:ee-grab')
    }
}
project(':ee-grab:ee-moodle'){
    dependencies {
        compile project(':ee-grab:ee-grab')
    }
}
project(':ee-grab:ee-moodle_fx'){
    apply plugin: 'application'
    mainClassName = 'ee.moodle.fx.MoodleApp'

    dependencies {
        compile project(':ee-grab:ee-moodle')
        compile "no.tornado:tornadofx:$version_tornadofx"
    }

    jar {
        manifest {
            attributes(
                    'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                    'Main-Class': 'ee.moodle.fx.MoodleApp'
            )
        }
        from configurations.compile.collect { entry -> zipTree(entry) }
    }

    task copyDrivers(type: Copy) {
        from "$buildDir/../../ee-grab/drivers"
        into "$buildDir/drivers"
    }

    distributions {
        main {
            contents {
                from(copyDrivers) {
                    into "drivers"
                }
            }
        }
    }
}

project(':ee-grab:ee-unisa'){
    dependencies {
        compile project(':ee-grab:ee-grab')
    }
}

project(':ee-grab:ee-brill'){
     dependencies {
         compile project(':ee-grab:ee-grab')
     }
}

project(':ee-schkola:ee-schkola'){
    dependencies {
        compile project(':ee:ee-common')

        testCompile project(':ee-grab:ee-fiveh')
        testCompile project(':ee-office:ee-msaccess')
        testCompile project(':ee-email:ee-email_excel')
    }
}
project(':ee-schkola:ee-schkola_fx'){
    apply plugin: 'application'

    dependencies {
        compile project(':ee:ee-common')
        compile project(':ee:ee-design')
        compile project(':ee-schkola:ee-schkola')
        compile "no.tornado:tornadofx:$version_tornadofx"
    }

    jar {
        manifest {
            attributes(
                    'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                    'Main-Class': 'ee.schkola.fx.app.MyApp'
            )
        }
        from configurations.compile.collect { entry -> zipTree(entry) }
    }

    mainClassName = "ee.schkola.fx.app.MyApp"
}
project(':ee-schkola:ee-schkola_des'){
    dependencies {
        compile project(':ee:ee-common')
        compile project(':ee:ee-design')
        compile project(':ee:ee-system')
    }
}
project(':ee-schkola:ee-schkola_des_fx'){
    dependencies {
        compile project(':ee-schkola:ee-schkola_des')
        compile project(':ee:ee-lang_fx')
    }
}
project(':ee-schkola:ee-schkola_groovy'){
    apply plugin: "groovy"

    dependencies {
        compile project(':ee:ee-common')
        compile project(':ee-schkola:ee-schkola')
        compile project(':ee-office:ee-msaccess')
        compile 'org.codehaus.groovy:groovy-all:2.4.7'

        testCompile project(':ee:ee-design')
    }
}


project(':rfc1006:rfc1006'){
    dependencies {
    }
}

project(':rfc1006:rfc1006_des'){
    dependencies {
        compile project(':ee:ee-design')
    }
}